paths:
  /channels:
    post:
      summary: Create a channel
      description: Create a new channel
      operationId: createChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  description: String composed of letters, numbers, underscore, period, and dash. Up to 128 characters
                  maxLength: 128
                  pattern: '^[a-zA-Z0-9_.-]+$'
                acl:
                  type: object
                  description: Valid ACL object. By default, everything but type and user is editable after creating the channel
                  properties:
                    full:
                      type: object
                      properties:
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have full access
                        immutable:
                          type: boolean
                          description: If full access is immutable
                    read:
                      type: object
                      properties:
                        any_user:
                          type: boolean
                          description: Whether any user can read the channel
                        public:
                          type: boolean
                          description: If the channel can be read by unauthenticated access
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have read access
                        immutable:
                          type: boolean
                          description: If read access is immutable
                    write:
                      type: object
                      properties:
                        any_user:
                          type: boolean
                          description: Whether any user can write to the channel
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have write access
                        immutable:
                          type: boolean
                          description: If write access is immutable
                raw:
                  type: object
                  description: Embedded raw values
      security:
        - UserToken: 
          - messages
      responses:
        '201':
          description: The created channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 201
                  data:
                    $ref: 'index.yml#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /channels/{channel_id}:
    put:
      summary: Update a channel
      description: Update a channel. PUT and PATCH may be used.
      operationId: updateChannel
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acl:
                  type: object
                  description: Valid ACL object. Only mutable ACLs can be updated.
                  properties:
                    full:
                      type: object
                      properties:
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have full access
                    read:
                      type: object
                      properties:
                        any_user:
                          type: boolean
                          description: Whether any user can read the channel
                        public:
                          type: boolean
                          description: If the channel can be read by unauthenticated access
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have read access
                    write:
                      type: object
                      properties:
                        any_user:
                          type: boolean
                          description: Whether any user can write to the channel
                        user_ids:
                          type: array
                          items:
                            type: string
                          description: List of user IDs who have write access
                raw:
                  type: object
                  description: Embedded raw values
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: The updated channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  data:
                    $ref: 'index.yml#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    
    delete:
      summary: Delete a channel
      description: Deactivate a channel. Only the creator of a channel can deactivate it. Deactivating a channel removes all subscriptions to the channel, but does nothing to the contents. It is irreversible. io.pnut.core.pm-type channels cannot be deactivated.
      operationId: deleteChannel
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel to delete
          schema:
            type: string
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: The deactivated channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  data:
                    $ref: 'index.yml#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /channels/{channel_id}/owner:
    put:
      summary: Change channel owner
      description: Change the owner of a channel. Can not be done to io.pnut.core.pm-type channels. Can only be done by the current owner of the channel. The current owner will automatically be made a full access user of the channel.
      operationId: changeChannelOwner
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel to change owner
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - owner_id
              properties:
                owner_id:
                  type: string
                  description: User ID or @-username of new owner
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: The updated channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  data:
                    $ref: 'index.yml#/components/schemas/Channel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  responses:
    BadRequest:
      description: The request was malformed
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  error_message:
                    type: string
    Unauthorized:
      description: Authentication is required or has failed
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
    Forbidden:
      description: The authenticated user doesn't have permission
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 403
                  error_message:
                    type: string
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 404
                  error_message:
                    type: string
