components:
  schemas:
    # User schemas are defined in users.yml

paths:
  /users/search:
    get:
      summary: Search users
      description: Retrieve a list of users filtered by the given criteria
      operationId: searchUsers
      parameters:
        # Search parameters
        - name: q
          in: query
          required: false
          description: List of words included in user profiles or names
          schema:
            type: string
        
        # Sort parameters
        - name: order
          in: query
          required: false
          description: Sort order for results
          schema:
            type: string
            enum: [id, relevance]
            default: relevance
        
        # Filter parameters
        - name: created_after
          in: query
          required: false
          description: ISO 8601-formatted timestamp after which users were created
          schema:
            type: string
            format: date-time
        - name: created_before
          in: query
          required: false
          description: ISO 8601-formatted timestamp before which users were created
          schema:
            type: string
            format: date-time
        - name: is_follower
          in: query
          required: false
          description: Whether to include users who follow you. Requires authentication
          schema:
            type: boolean
        - name: is_following
          in: query
          required: false
          description: Whether to include users who you are following. Requires authentication
          schema:
            type: boolean
        - name: locale
          in: query
          required: false
          description: Valid user locale e.g., en_US
          schema:
            type: string
        - name: timezone
          in: query
          required: false
          description: Valid user timezone e.g., America/Chicago
          schema:
            type: string
        - name: user_types
          in: query
          required: false
          description: Comma-separated list of user types (human, feed, bot)
          schema:
            type: string
        
        # Pagination parameters
        - $ref: '#/components/parameters/since_id'
        - $ref: '#/components/parameters/before_id'
        - $ref: '#/components/parameters/count'
      security:
        - OAuth2: []
        - AppToken: []
        - UserToken: []
      responses:
        '200':
          description: A list of users matching the search criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      more:
                        type: boolean
                        description: Whether there are more objects available
                      max_id:
                        type: string
                        description: The maximum ID returned in this response
                      min_id:
                        type: string
                        description: The minimum ID returned in this response
                      code:
                        type: integer
                        example: 200
                  data:
                    type: array
                    items:
                      $ref: 'users.yml#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/suggested:
    get:
      summary: Suggested users
      description: Get a list of suggested users to follow. Includes users followed by users you follow, who actively post, and are not blocked or muted.
      operationId: getSuggestedUsers
      parameters:
        - $ref: '#/components/parameters/since_id'
        - $ref: '#/components/parameters/before_id'
        - $ref: '#/components/parameters/count'
      security:
        - UserToken: 
          - follow
      responses:
        '200':
          description: A list of suggested users
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      more:
                        type: boolean
                        description: Whether there are more objects available
                      max_id:
                        type: string
                        description: The maximum ID returned in this response
                      min_id:
                        type: string
                        description: The minimum ID returned in this response
                      code:
                        type: integer
                        example: 200
                  data:
                    type: array
                    items:
                      $ref: 'users.yml#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  parameters:
    since_id:
      name: since_id
      in: query
      description: Only return objects with IDs higher than this ID
      schema:
        type: string
    before_id:
      name: before_id
      in: query
      description: Only return objects with IDs lower than this ID
      schema:
        type: string
    count:
      name: count
      in: query
      description: Number of objects to return (1-200 for newest, -200 to -1 for oldest)
      schema:
        type: integer
        minimum: -200
        maximum: 200
        default: 20
  
  responses:
    BadRequest:
      description: The request was malformed
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  error_message:
                    type: string
    Unauthorized:
      description: Authentication is required or has failed
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
