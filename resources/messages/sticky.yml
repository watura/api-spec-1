paths:
  /channels/{channel_id}/sticky_messages:
    get:
      summary: Get sticky messages in a channel
      description: |
        Retrieve sticky messsages in a channel. The requesting user must have access to the channel.
        
        "Sticky" messages are like bookmarks for a channel, but they are per-channel, not per-user. 
        They will have `is_sticky: true`. The channel also has an indicator, `channel.has_sticky_messages` 
        that will tell if the channel has sticky messages.
        
        Note that the `pagination_id` and `min_id` and `max_id` will change as users sticky and un-sticky messages.
      operationId: getStickyMessages
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel to retrieve messages from
          schema:
            type: string
        - $ref: '#/components/parameters/since_id'
        - $ref: '#/components/parameters/before_id'
        - $ref: '#/components/parameters/count'
        - $ref: 'index.yml#/components/parameters/include_deleted'
        - $ref: 'index.yml#/components/parameters/include_html'
        - $ref: 'index.yml#/components/parameters/include_message_html'
        - $ref: 'index.yml#/components/parameters/include_raw'
        - $ref: 'index.yml#/components/parameters/include_message_raw'
        - $ref: 'index.yml#/components/parameters/include_client'
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: A list of sticky messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      more:
                        type: boolean
                        description: Whether there are more objects available
                      max_id:
                        type: string
                        description: The maximum ID returned in this response
                      min_id:
                        type: string
                        description: The minimum ID returned in this response
                  data:
                    type: array
                    items:
                      $ref: 'index.yml#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /channels/{channel_id}/messages/{message_id}/sticky:
    put:
      summary: Sticky a message
      description: |
        Sticky a message.
        
        Users with `full` access to a channel are able to sticky and un-sticky messages in the channel.
        
        In Private Message channels (type `io.pnut.core.pm`), anyone can stick and un-sticky messages.
      operationId: stickyMessage
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel the message is in
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message to sticky
          schema:
            type: string
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: The stickied message
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  data:
                    $ref: 'index.yml#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    
    delete:
      summary: Unsticky a message
      description: Un-sticky a message
      operationId: unstickyMessage
      parameters:
        - name: channel_id
          in: path
          required: true
          description: ID of the channel the message is in
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message to un-sticky
          schema:
            type: string
      security:
        - UserToken: 
          - messages
      responses:
        '200':
          description: The un-stickied message
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                  data:
                    $ref: 'index.yml#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    since_id:
      name: since_id
      in: query
      description: Only return objects with IDs higher than this ID
      schema:
        type: string
    before_id:
      name: before_id
      in: query
      description: Only return objects with IDs lower than this ID
      schema:
        type: string
    count:
      name: count
      in: query
      description: Number of objects to return (1-200 for newest, -200 to -1 for oldest)
      schema:
        type: integer
        minimum: -200
        maximum: 200
        default: 20
  
  responses:
    Unauthorized:
      description: Authentication is required or has failed
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  error_message:
                    type: string
    Forbidden:
      description: The authenticated user doesn't have permission
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 403
                  error_message:
                    type: string
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  code:
                    type: integer
                    example: 404
                  error_message:
                    type: string
